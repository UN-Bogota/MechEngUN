#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May  3 15:53:23 2024

@author: julian
"""
import scipy 
import numpy as np
import pandas as pd
import cantera as ct
import matplotlib.pyplot as plt
from ic_f import ic_fun
from calculos_presion_21_3_2024 import *

def normal(x):
    x=x/sum(x)
    return x
#a_p es el ángulo de los datos tomados escogido y corregido para estar entre -360 y 360
#P_pa es el vector de la presión de los datos tomados
rpm=3679.5
m_d=1.1e-5
x=np.linspace(10,21,25)

d1=dataframes_cop[(dataframes_cop['load']==6)*(dataframes_cop['fuel']=='B8')*(dataframes_cop['prueba']==2)]
P_pruebas=d1.groupby('angle')['P_abs_cam'].mean()
P_p=P_pruebas.to_frame()
a_p=P_p.index
P_pa=P_p.to_numpy()
KL=[]
rv=[]
for j in x:
    try:
        t,a,P=ic_fun(rpm,m_d,j)
    except: ct.CanteraError
    else:
        inda=np.arange(0,len(a),1)
        i2pick=np.random.choice(inda,100,replace=False)
        ind=[]
        
        for i in i2pick:
            new=abs(a_p-a[i])<0.361
            ind.append(np.where(new == 1)[0][0])
        Ps=P_pa[ind]/sum(P_pa)
        Qs=P[i2pick]/sum(P)
        rv.append(j)
        KL.append(scipy.stats.entropy(Ps,Qs)[0])
plt.plot(rv,KL)